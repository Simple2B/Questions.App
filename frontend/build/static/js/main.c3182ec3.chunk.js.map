{"version":3,"sources":["socket.ts","components/asker/Asker.tsx","components/answerer/Answerer.tsx","App.tsx","hooks/useExitPrompt.ts","index.tsx"],"names":["questions_ws","io","Asker","socket","useState","question","setQuestion","className","type","placeholder","aria-label","aria-describedby","value","onChange","e","target","id","onClick","resp","session","emit","Answerer","question_components","questions","map","question_text","Date","created_at","toLocaleTimeString","App","page","setPage","activeQuestions","setActiveQuestions","useEffect","on","send","status","tmpData","data","console","log","handler","handlerRef","useRef","current","handleBeforeunload","evt","returnValue","defaultPrevented","window","addEventListener","removeEventListener","useBeforeunload","event","preventDefault","client_data","message","disconnect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,EAAeC,aAAG,c,iBCMlBC,EAAQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OACtB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAUA,OAEE,aADA,CACA,OAAKC,UAAU,QAAf,SACE,sBAAMA,UAAU,cAAhB,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,eACVE,YAAY,oBACZC,aAAW,oBACXC,mBAAiB,gBACjBC,MAAOP,EACPQ,SAAU,SAACC,GACTR,EAAYQ,EAAEC,OAAOH,UAGzB,wBACEL,UAAU,kBACVC,KAAK,SACLQ,GAAG,gBACHC,QA5BmB,WAC3B,IAAMC,EAAO,CACXC,QAAShB,EAAOa,GAChBX,SAAUA,GAERA,GAAUF,EAAOiB,KAAK,kBAAmBF,IAmBvC,yBC3BGG,G,MAAW,SAAC,GAAmC,IACpDC,EADmD,EAAhCC,UACaC,KAAI,SAACnB,GAAD,OACxC,sBAAKE,UAAU,oBAAf,UACE,+BAAOF,EAASoB,gBAChB,sBAAKlB,UAAU,eAAf,UACE,wBAAQA,UAAU,iBAAlB,2BACA,8BACE,+BAAO,IAAImB,KAAKrB,EAASsB,YAAYC,8BALHvB,EAASW,OAUnD,OAEE,cADA,CACA,OAAKT,UAAU,SAAf,UACE,gDACCe,OCTMO,G,MAAM,WACjB,MAA4BzB,mBAAiBJ,GAA7C,mBAAOG,EAAP,KACA,GADA,KACwBC,oBAAS,IAAjC,mBAAO0B,EAAP,KAAaC,EAAb,KACA,EAA8C3B,mBAAS,IAAvD,mBAAO4B,EAAP,KAAwBC,EAAxB,KAMAC,qBAAU,WACR/B,EAAOgC,GAAG,WAAW,WACnBhC,EAAOiC,KAAP,eAAoBjC,EAAOa,GAA3B,sBAGFb,EAAOgC,GAAG,4BAA4B,SAACjB,GACrC,GAAoB,YAAhBA,EAAKmB,OAAsB,CAC7B,IAAMC,EAAUpB,EAAKqB,KACrBN,EAAmBK,GAErBE,QAAQC,IAAIvB,MAGdf,EAAOgC,GAAG,2BAA2B,SAACjB,GACpCf,EAAOiB,KAAK,wBACZoB,QAAQC,IAAIvB,MAlBdf,EAAOiB,KAAK,0BAsBX,ICTE,SAAyBsB,GAC9B,IAAMC,EAAaC,iBAAOF,GAE1BR,qBAAU,WACRS,EAAWE,QAAUH,IACpB,CAACA,IAEJR,qBAAU,WACR,IAAMY,EAA0C,SAACC,GAC/C,IAAIC,EAUJ,GARkC,oBAAvBL,EAAWE,UACpBG,EAAcL,EAAWE,QAAQE,IAG/BA,EAAIE,mBACNF,EAAIC,YAAc,IAGO,kBAAhBA,EAET,OADAD,EAAIC,YAAcA,EACXA,GAMX,OAFAE,OAAOC,iBAAiB,eAAgBL,GAEjC,WACLI,OAAOE,oBAAoB,eAAgBN,MAE5C,IDnBHO,EAAgB,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAc,CAClBrC,QAAShB,EAAOa,GAChByC,QAAS,6BAEXtD,EAAOiB,KAAK,gBAAiBoC,GAC7BrD,EAAOuD,gBAOT,OACE,qCACE,8BACG5B,EACC,cAAC,EAAD,CAAO3B,OAAQA,IAEf,cAAC,EAAD,CAAUoB,UAAWS,MAGzB,wBAAQf,QAbO,WACjBc,GAASD,IAYP,8BE/DN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c3182ec3.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\r\n\r\nexport const questions_ws = io(\"/questions\");\r\n","import { Socket } from \"socket.io-client\";\r\nimport React, { useState } from \"react\";\r\nimport \"./asker.css\";\r\n\r\ninterface IAnswererProps {\r\n  socket: Socket;\r\n}\r\n\r\nexport const Asker = ({ socket }: IAnswererProps) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n\r\n  const handleCreateQuestion = () => {\r\n    const resp = {\r\n      session: socket.id,\r\n      question: question,\r\n    };\r\n    if (question) socket.emit(\"create_question\", resp);\r\n  };\r\n\r\n  return (\r\n    // <div className=\"answer position-absolute top-50 start-50 translate-middle shadow-sm p-3 mb-5 bg-body rounded\">\r\n    <div className=\"asker\">\r\n      <form className=\"asker__form\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ask your question\"\r\n            aria-label=\"Ask your question\"\r\n            aria-describedby=\"button-addon2\"\r\n            value={question}\r\n            onChange={(e) => {\r\n              setQuestion(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className=\"btn btn-success\"\r\n            type=\"button\"\r\n            id=\"button-addon2\"\r\n            onClick={handleCreateQuestion}\r\n          >\r\n            Ask\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* <span>Total number of replies: {questions.length}</span> */}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { IQuestion } from \"../../types/questionTypes\";\r\nimport \"./answerer.css\";\r\n\r\ninterface IAnswererProps {\r\n  questions: Array<IQuestion>;\r\n}\r\n\r\nexport const Answerer = ({ questions }: IAnswererProps) => {\r\n  const question_components = questions.map((question) => (\r\n    <div className=\"answer__container\" key={question.id}>\r\n      <span>{question.question_text}</span>\r\n      <div className=\"button_block\">\r\n        <button className=\"answer__button\">Submit answer</button>\r\n        <div>\r\n          <span>{new Date(question.created_at).toLocaleTimeString()}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n  return (\r\n    // <div className=\"answer translate-middle shadow-sm p-3 mb-5 bg-body rounded\">\r\n    <div className=\"answer\">\r\n      <p>Answerer window</p>\r\n      {question_components}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { questions_ws } from \"./socket\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { useBeforeunload } from \"./hooks/useExitPrompt\";\r\nimport { Asker } from \"./components/asker/Asker\";\r\nimport { Answerer } from \"./components/answerer/Answerer\";\r\nimport \"./app.css\";\r\n\r\nconst questionsFromServer = [\r\n  { id: 1, header: \"Header 1\", question: \"rem ipsum dolor sit amet\", time: 15 },\r\n  { id: 2, header: \"Header 2\", question: \"rem ipsum dolor sit amet\", time: 15 },\r\n  { id: 3, header: \"Header 3\", question: \"rem ipsum dolor sit amet\", time: 15 },\r\n  { id: 4, header: \"Header 4\", question: \"rem ipsum dolor sit amet\", time: 15 },\r\n];\r\n\r\nexport const App = () => {\r\n  const [socket, setSocket] = useState<Socket>(questions_ws);\r\n  const [page, setPage] = useState(true);\r\n  const [activeQuestions, setActiveQuestions] = useState([]);\r\n\r\n  const handleGetQuestions = () => {\r\n    socket.emit(\"get_active_questions\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect\", () => {\r\n      socket.send(`User ${socket.id} has connected`);\r\n    });\r\n\r\n    socket.on(\"success_active_questions\", (resp) => {\r\n      if (resp.status === \"success\") {\r\n        const tmpData = resp.data;\r\n        setActiveQuestions(tmpData);\r\n      }\r\n      console.log(resp);\r\n    });\r\n\r\n    socket.on(\"question_create_success\", (resp) => {\r\n      socket.emit(\"get_active_questions\");\r\n      console.log(resp);\r\n    });\r\n\r\n    handleGetQuestions();\r\n  }, []);\r\n\r\n  useBeforeunload((event) => {\r\n    event.preventDefault();\r\n    const client_data = {\r\n      session: socket.id,\r\n      message: \"disconnected successfully\",\r\n    };\r\n    socket.emit(\"leave_service\", client_data);\r\n    socket.disconnect();\r\n  });\r\n\r\n  const handlePage = () => {\r\n    setPage(!page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {page ? (\r\n          <Asker socket={socket} />\r\n        ) : (\r\n          <Answerer questions={activeQuestions} />\r\n        )}\r\n      </div>\r\n      <button onClick={handlePage}>Change Page</button>\r\n    </>\r\n  );\r\n};\r\n","// import { useState, useEffect } from \"react\";\r\n\r\n// const initBeforeUnLoad = (showExitPrompt:boolean) => {\r\n//   window.onbeforeunload = (event:Event) => {\r\n//     if (showExitPrompt) {\r\n//       const e = event || window.event;\r\n//       e.preventDefault();\r\n//       if (e) {\r\n//         e.returnValue = \"\";\r\n//       }\r\n//       return \"\";\r\n//     }\r\n//   };\r\n// };\r\n\r\n// // Hook\r\n// export default function useExitPrompt(bool:boolean) {\r\n//   const [showExitPrompt, setShowExitPrompt] = useState(bool);\r\n\r\n//   window.onload = function () {\r\n//     initBeforeUnLoad(showExitPrompt);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     initBeforeUnLoad(showExitPrompt);\r\n//   }, [showExitPrompt]);\r\n\r\n//   return [showExitPrompt, setShowExitPrompt];\r\n// }\r\n\r\nimport { useEffect, useRef } from \"react\";\r\n\r\ntype BeforeunloadHandler = (evt: BeforeUnloadEvent) => void;\r\n\r\nexport function useBeforeunload(handler: BeforeunloadHandler) {\r\n  const handlerRef = useRef(handler);\r\n\r\n  useEffect(() => {\r\n    handlerRef.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeunload: BeforeunloadHandler = (evt) => {\r\n      let returnValue;\r\n\r\n      if (typeof handlerRef.current === \"function\") {\r\n        returnValue = handlerRef.current(evt);\r\n      }\r\n\r\n      if (evt.defaultPrevented) {\r\n        evt.returnValue = \"\";\r\n      }\r\n\r\n      if (typeof returnValue === \"string\") {\r\n        evt.returnValue = returnValue;\r\n        return returnValue;\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeunload);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeunload);\r\n    };\r\n  }, []);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}